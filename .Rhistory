A1 <- colMeans(AA1[2:13])
A2 <- colMeans(AA2[2:13])
A1 <- data.frame(A1)
A1 <- cbind(province = rownames(A1), A1)
rownames(A1) <- 1:nrow(A1)
#repeat TR for three tritories
A1[nrow(A1) + 1,] <- c( "YT",  0.338555269656022)
A1[nrow(A1) + 1,] <- c( "NT", 0.338555269656022)
A1[nrow(A1) + 1,] <- c( "NU",0.338555269656022)
A1$A1 <- as.numeric(A1$A1)
A1 <- A1 %>% rename(Percentage = A1)
A1$province[A1$province == 'PEI'] <- 'PE'
A2 <- data.frame(A2)
A2 <- cbind(province = rownames(A2), A2)
rownames(A2) <- 1:nrow(A2)
#repeat TR for three tritories
A2[nrow(A2) + 1,] <- c( "YT", 3.62752706114931)
A2[nrow(A2) + 1,] <- c( "NT", 3.62752706114931)
A2[nrow(A2) + 1,] <- c( "NU", 3.62752706114931)
A2$A2 <- as.numeric(A2$A2)
A2 <- A2 %>% rename(Percentage = A2)
A2$province[A2$province == 'PEI'] <- 'PE'
#return(A1)
return(A2)
}
A1 <- Av.per(CRPer)
A2 <- Av.per(CRPer)
## canada map
pr_geographic <- mapcan(boundaries = province, type = standard)
pr_geographic <- inner_join(pr_geographic, A1, by = c("pr_alpha" = "province"))
m1 <- pr_geographic %>%
ggplot(aes(x = long, y = lat, group = group, fill = Percentage)) +
geom_polygon(alpha= 1, show.legend = NA) +
annotate(geom = "text", x = 642412.6, y = 201110.2, label = "27%", color = "white", size = 3)+
annotate(geom = "text", x = 1349519.2, y = 782762.2,label = "14%", color = "white", size = 3)+
annotate(geom = "text", x = -115306.8, y = 644233.4,label = "0.7%",color = "white", size = 3)+
annotate(geom = "text", x = 2163606.1, y = 237946.6, label = "3%", color = "white", size = 3)+
annotate(geom = "text", x = -1092152.6,y = 809288.2, label = "7%", color = "white", size = 3)+
annotate(geom = "text", x = -1867594.7,y =912726.5, label = "2.5%",color = "white", size = 3)+
annotate(geom = "text", x = -675361.6, y = 487741.4,label = "0.5%",color = "white", size = 3)+
annotate(geom = "text", x = -888417.3, y = 1651194.8,label = "0.3%",color ="white", size = 3)+
annotate(geom = "text", x = 2413606.1, y = 421394.6,label = "0.6%",color ="black", size = 3)+
annotate(geom = "text", x = 2695757.5, y = 232727.5,label = "22%", color = "black", size = 3)+
annotate(geom = "text", x = 1565757, y = -750409 , label = "US 14% & Others 8%",
fontface = "italic", color = "black", size = 3) +
coord_fixed() +
theme_mapcan() +
scale_fill_continuous(type = "viridis",
limits = c(0,30), breaks = c(0, 5, 10, 15, 20, 25,30),
guide = guide_colourbar(nbin = 100, draw.ulim = FALSE, draw.llim = FALSE,barwidth = 20,
title = "Travel volume (%)")
)+
theme_mapcan() + theme(legend.position="bottom",
plot.title=element_text(size=rel(1.3), face="bold"))+
ggtitle("Before the pandemic")
pr_geographic2 <- mapcan(boundaries = province, type = standard)
pr_geographic2 <- inner_join(pr_geographic2, A2, by = c("pr_alpha" = "province"))
m2 <- pr_geographic2 %>%
ggplot(aes(x = long, y = lat, group = group, fill = Percentage)) +
geom_polygon(show.legend = NA) +
annotate(geom = "text",x = 642412.6,y = 201110.2, label = "21%", color = "white",size = 3)+
annotate(geom = "text",x = 1349519.2,y = 782762.2, label = "4.7%",color = "white",size = 3)+
annotate(geom = "text",x = -115306.8,y = 644233.4, label = "1%", color = "white",size = 3)+
annotate(geom = "text",x = 2163606.1,y = 237946.6, label = "3%", color = "white", size = 3)+
annotate(geom = "text",x = -1092152.6,y = 809288.2, label = "16%", color = "white",size = 3)+
annotate(geom = "text",x = -1867594.7,y =912726.5, label = "5.2%", color = "white",size = 3)+
annotate(geom = "text",x = -675361.6,y = 487741.4, label = "0.7%", color = "white",size = 3)+
annotate(geom = "text",x = -888417.3,y = 1651194.8 , label = "3.6%", color ="white",size = 3)+
annotate(geom = "text", x = 2413606.1, y = 421394.6,label = "0.7%",color ="black", size = 3)+
annotate(geom = "text",x = 2695757.5,y = 232727.5, label = "19%", color = "black", size = 3)+
annotate(geom = "text", x = 1565757, y = -750409 , label = "US 9% & Others 15%",
fontface = "italic", color = "black", size = 3) +
coord_fixed() +
scale_fill_continuous( type = "viridis",
limits = c(0,30), breaks = c(0, 5, 10, 15, 20, 25,30),
guide = guide_colourbar(nbin = 100, draw.ulim = FALSE, draw.llim = FALSE,
title = "Travel volume (%)")
) +
theme_mapcan() + theme(legend.position="",
plot.title=element_text(size=rel(1.3), face="bold"))+
ggtitle("During the pandemic")
m1 + m2
Av.daily <- function(ProFinal){
CC <- ProFinal
# get the average months March 2019 to Feb 2020 (except June July August 2019)
CC <- subset(CC, !date %in% c(as.Date("2019-01-01"), as.Date("2019-02-01"),
as.Date("2020-03-01"), as.Date("2019-06-01"),
as.Date("2019-07-01"), as.Date("2019-07-01"),
as.Date("2019-08-01")) )
rownames(CC) <- NULL  # Reset row names
CC1 <- CC[1:9,]    #prepandemic
CC2 <- CC[10:18,]  #pandemic
# get the mean for both dataframe
C1 <- colSums(CC1[2:13])
C2 <- colSums(CC2[2:13])
C1 <- data.frame(C1)
C1 <- cbind(province = rownames(C1), C1)
rownames(C1) <- 1:nrow(C1)
#repeat TR for three tritories
C1[nrow(C1) + 1,] <- c( "YT",  2682.378)
C1[nrow(C1) + 1,] <- c( "NT", 2682.378)
C1[nrow(C1) + 1,] <- c( "NU",2682.378)
C1$C1 <- as.numeric(C1$C1)
C1 <- C1 %>% rename(Daily = C1)
C1$province[C1$province == 'PEI'] <- 'PE'
# 273 days pre pandemic 2019
C1$Daily <- (C1$Daily)/273
C1$Daily <- ceiling(C1$Daily)
C2 <- data.frame(C2)
C2 <- cbind(province = rownames(C2), C2)
rownames(C2) <- 1:nrow(C2)
#repeat TR for three tritories
C2[nrow(C2) + 1,] <- c( "YT", 5329)
C2[nrow(C2) + 1,] <- c( "NT", 5329)
C2[nrow(C2) + 1,] <- c( "NU", 5329)
C2$C2 <- as.numeric(C2$C2)
C2 <- C2 %>% rename(Daily = C2)
C2$province[C2$province == 'PEI'] <- 'PE'
## 274 days during the pandemic 2020
C2$Daily <- (C2$Daily)/274
C2$Daily <- ceiling(C2$Daily)
#return(C1)
return(C2)
}
C1 <- Av.daily(ProFinal)
C2 <- Av.daily(ProFinal)
pr_geographic <- mapcan(boundaries = province, type = standard)
pr_geographic <- inner_join(pr_geographic, C1, by = c("pr_alpha" = "province"))
df.label <- read.csv("Data/df.label2.csv")
df.label <- df.label %>% left_join(C1 , by= "province")
df.label$Daily <- round(df.label$Daily)
m3 <- pr_geographic %>%
ggplot(aes(x = long, y = lat, group = group, fill = Daily)) +
geom_polygon(show.legend = NA) +
geom_text(data =df.label, aes(x = new.long, y = new.lat, group = 1, label = Daily),
size = 4, color = "white")+
annotate(geom = "text",x = 2685757.5,y = 232727.5,label = "648", color = "black", size = 4)+
annotate(geom = "text", x = 2413606.1, y = 421394.6,label = "19",color ="black", size = 4)+
annotate(geom = "text", x = 1565757, y = -750409 , label = "US 479 & Others 300",
fontface = "italic", color = "black", size = 4) +
coord_fixed() +
theme_mapcan() +
scale_fill_continuous(type = "viridis",
limits = c(0,900), breaks = c(25,50,75, 100, 200, 300, 400, 500,600, 700,800,900),
#limits = c(0,900), breaks = c(25,50,75,100,250,500,750,900),
guide = guide_colourbar(nbin = 13, draw.ulim = FALSE, draw.llim = FALSE, barwidth = 20,
title = "Total travel volume (Daily)", label.hjust = 0.7,
label.vjust = 0.79,
label.theme = element_text(angle = 90, size=7.9))
) +
theme_mapcan() + theme(legend.position="bottom",
plot.title=element_text(size=rel(1.3), face="bold"))+
ggtitle("Before the pandemic")
pr_geographic2 <- mapcan(boundaries = province, type = standard)
pr_geographic2 <- inner_join(pr_geographic2, C2, by = c("pr_alpha" = "province"))
df.label <- read.csv("Data/df.label2.csv")
df.label <- df.label %>% left_join(C2 , by= "province")
m4 <- pr_geographic2 %>%
ggplot(aes(x = long, y = lat, group = group, fill = Daily)) +
geom_polygon(show.legend = NA) +
geom_text(data =df.label, aes(x = new.long, y = new.lat, group = 1, label = Daily),
size = 4, color = "white")+
annotate(geom = "text", x = 2715757.5,y = 232727.5,label = "115", color = "black", size = 4)+
annotate(geom = "text", x = 2413606.1, y = 421394.6,label = "5",color ="black", size = 4)+
annotate(geom = "text", x = 1565757, y = -750409 , label = "US 54 & Others 85",
fontface = "italic", color = "black", size = 4) +
coord_fixed() +
scale_fill_continuous( type = "viridis",
limits = c(0,900), breaks = c(25,50,75,100,250,500,750,900),
guide = guide_colourbar(nbin = 10, draw.ulim = FALSE, draw.llim = FALSE, barwidth = 15,
title = "Travel volume (Daily)",
label.theme = element_text(angle = 90, size=7.8))
) +
theme_mapcan() + theme(legend.position="",
plot.title=element_text(size=rel(1.3), face="bold"))+
ggtitle("During the pandemic")
m3 + m4
daily.TV <- function(){
Daily1 <- total.pand(TDF, FC, FCEXCrew)
Daily1 <- select(Daily1, c("date", "TDF_CA", "TDF_Int", "FC", "crew_CA", "Exp_CA" ))
#Find exemption of TDF for INT and CA
Daily1["exclINT"] <- Daily1$FC - Daily1$TDF_Int
Daily1["exclCA"] <- Daily1$crew_CA + Daily1$Exp_CA
#Share of each province during the pandeic
perCAPan <- per12 %>% filter(per12$date >= as.Date("2020-09-01"))
perCAPan <- select(perCAPan, -c(nonUS, US))
## divid exemption Canada based perCAPan between provinces per month
Dailypro <- perCAPan
for (i in 1:nrow(Dailypro)){
for (j in 2:length(Dailypro)){
Dailypro[i,j] <- (Daily1$exclCA[i])*(perCAPan[i,j]/100) }
}
## make a dataframe of exemption Travel volume (who did not fill TDF form) for province and INT
Dailypro <- Dailypro %>% left_join(select(Daily1, c(date, exclINT)), by ="date")
# make data exemption daily 273
Dailypro["Ym"] <- format(as.Date(Dailypro$date), "%Y-%m")
Daily2 <- Dailypro %>% select(date) %>%
complete(date=  seq.Date(min(date), max(date)+30, by="day"),) %>%
mutate(Ym=paste(year(date),str_pad(month(date), 2, pad = "0"),sep = "-"))
Daily2 <- Daily2 %>% left_join(Dailypro, by="Ym")
return(Daily2)
}
Daily2 <- daily.TV()
# divide number for days in a month
v_daily <- function(yr_month, v_monthly) {
# Convert current month to current date
curr_date <- ymd(paste0(yr_month, "-1"))
# Calculate number of days in the month
n_days <- days_in_month(curr_date)
# Calculate daily rate
(v_monthly) / (n_days)
}
Daily2 <- Daily2 %>%
mutate(ON = map2_dbl(Ym, ON, v_daily), QC = map2_dbl(Ym, QC, v_daily),
MB = map2_dbl(Ym, MB, v_daily), NB = map2_dbl(Ym, NB, v_daily),
AB = map2_dbl(Ym, AB, v_daily), NS = map2_dbl(Ym, NS, v_daily),
BC = map2_dbl(Ym, BC, v_daily), SK = map2_dbl(Ym, SK, v_daily),
PEI = map2_dbl(Ym, PEI, v_daily), TR = map2_dbl(Ym, TR, v_daily),
exclINT = map2_dbl(Ym, exclINT, v_daily)
)
#keep the interested columns
Daily2 <- select(Daily2, -c("date.y", "Ym")) %>% rename(date = date.x)
Daily2 <- Daily2 %>% rename(INT= exclINT)
## add daily exemption into raw TDF data source
TDF <- select(TDF, -c("US", "nonUS","ALLCANotNL")) %>% rename(INT = AllFR)
Tra_daily2 <- TDF
origin <- c("ON","QC","MB", "NB", "AB", "NS", "BC", "SK", "PEI", "TR","INT")
for (i in 1:length(origin)){
pr <- origin[i]
for (j in 1:nrow(Tra_daily2)){
Tra_daily2[j, pr] <- TDF[j, pr] + Daily2[j,pr]
}
}
# round data
Tra_daily2 <- data.frame(lapply(Tra_daily2, function(x) if(is.numeric(x)) floor(x) else x))
#write.csv(Tra_daily2, " TotalTraVolume.csv")
View(Tra_daily2)
C1$Daily
View(C1)
Av.per <- function(CRPer){
AA <- CRPer
# get the average months March 2019 to Feb 2020 (except June July August 2019)
AA <- subset(AA, !date %in% c(as.Date("2019-01-01"), as.Date("2019-02-01"),
as.Date("2020-03-01"), as.Date("2019-06-01"),
as.Date("2019-07-01"), as.Date("2019-07-01"),
as.Date("2019-08-01")) )
rownames(AA) <- NULL   # Reset row names
AA1 <- AA[1:9,]        #pre-pandemic
AA2 <- AA[10:18,]      #pandemic
# get the mean for both dataframe
A1 <- colMeans(AA1[2:13])
A2 <- colMeans(AA2[2:13])
A1 <- data.frame(A1)
A1 <- cbind(province = rownames(A1), A1)
rownames(A1) <- 1:nrow(A1)
#repeat TR for three tritories
A1[nrow(A1) + 1,] <- c( "YT",  0.338555269656022)
A1[nrow(A1) + 1,] <- c( "NT", 0.338555269656022)
A1[nrow(A1) + 1,] <- c( "NU",0.338555269656022)
A1$A1 <- as.numeric(A1$A1)
A1 <- A1 %>% rename(Percentage = A1)
A1$province[A1$province == 'PEI'] <- 'PE'
A2 <- data.frame(A2)
A2 <- cbind(province = rownames(A2), A2)
rownames(A2) <- 1:nrow(A2)
#repeat TR for three tritories
A2[nrow(A2) + 1,] <- c( "YT", 3.62752706114931)
A2[nrow(A2) + 1,] <- c( "NT", 3.62752706114931)
A2[nrow(A2) + 1,] <- c( "NU", 3.62752706114931)
A2$A2 <- as.numeric(A2$A2)
A2 <- A2 %>% rename(Percentage = A2)
A2$province[A2$province == 'PEI'] <- 'PE'
return(A1)
#return(A2)
}
A1 <- Av.per(CRPer)
Av.per <- function(CRPer){
AA <- CRPer
# get the average months March 2019 to Feb 2020 (except June July August 2019)
AA <- subset(AA, !date %in% c(as.Date("2019-01-01"), as.Date("2019-02-01"),
as.Date("2020-03-01"), as.Date("2019-06-01"),
as.Date("2019-07-01"), as.Date("2019-07-01"),
as.Date("2019-08-01")) )
rownames(AA) <- NULL   # Reset row names
AA1 <- AA[1:9,]        #pre-pandemic
AA2 <- AA[10:18,]      #pandemic
# get the mean for both dataframe
A1 <- colMeans(AA1[2:13])
A2 <- colMeans(AA2[2:13])
A1 <- data.frame(A1)
A1 <- cbind(province = rownames(A1), A1)
rownames(A1) <- 1:nrow(A1)
#repeat TR for three tritories
A1[nrow(A1) + 1,] <- c( "YT",  0.338555269656022)
A1[nrow(A1) + 1,] <- c( "NT", 0.338555269656022)
A1[nrow(A1) + 1,] <- c( "NU",0.338555269656022)
A1$A1 <- as.numeric(A1$A1)
A1 <- A1 %>% rename(Percentage = A1)
A1$province[A1$province == 'PEI'] <- 'PE'
A2 <- data.frame(A2)
A2 <- cbind(province = rownames(A2), A2)
rownames(A2) <- 1:nrow(A2)
#repeat TR for three tritories
A2[nrow(A2) + 1,] <- c( "YT", 3.62752706114931)
A2[nrow(A2) + 1,] <- c( "NT", 3.62752706114931)
A2[nrow(A2) + 1,] <- c( "NU", 3.62752706114931)
A2$A2 <- as.numeric(A2$A2)
A2 <- A2 %>% rename(Percentage = A2)
A2$province[A2$province == 'PEI'] <- 'PE'
#return(A1)
return(A2)
}
A2 <- Av.per(CRPer)
## canada map
pr_geographic <- mapcan(boundaries = province, type = standard)
pr_geographic <- inner_join(pr_geographic, A1, by = c("pr_alpha" = "province"))
m1 <- pr_geographic %>%
ggplot(aes(x = long, y = lat, group = group, fill = Percentage)) +
geom_polygon(alpha= 1, show.legend = NA) +
annotate(geom = "text", x = 642412.6, y = 201110.2, label = "27%", color = "white", size = 3)+
annotate(geom = "text", x = 1349519.2, y = 782762.2,label = "14%", color = "white", size = 3)+
annotate(geom = "text", x = -115306.8, y = 644233.4,label = "0.7%",color = "white", size = 3)+
annotate(geom = "text", x = 2163606.1, y = 237946.6, label = "3%", color = "white", size = 3)+
annotate(geom = "text", x = -1092152.6,y = 809288.2, label = "7%", color = "white", size = 3)+
annotate(geom = "text", x = -1867594.7,y =912726.5, label = "2.5%",color = "white", size = 3)+
annotate(geom = "text", x = -675361.6, y = 487741.4,label = "0.5%",color = "white", size = 3)+
annotate(geom = "text", x = -888417.3, y = 1651194.8,label = "0.3%",color ="white", size = 3)+
annotate(geom = "text", x = 2413606.1, y = 421394.6,label = "0.6%",color ="black", size = 3)+
annotate(geom = "text", x = 2695757.5, y = 232727.5,label = "22%", color = "black", size = 3)+
annotate(geom = "text", x = 1565757, y = -750409 , label = "US 14% & Others 8%",
fontface = "italic", color = "black", size = 3) +
coord_fixed() +
theme_mapcan() +
scale_fill_continuous(type = "viridis",
limits = c(0,30), breaks = c(0, 5, 10, 15, 20, 25,30),
guide = guide_colourbar(nbin = 100, draw.ulim = FALSE, draw.llim = FALSE,barwidth = 20,
title = "Travel volume (%)")
)+
theme_mapcan() + theme(legend.position="bottom",
plot.title=element_text(size=rel(1.3), face="bold"))+
ggtitle("Before the pandemic")
pr_geographic2 <- mapcan(boundaries = province, type = standard)
pr_geographic2 <- inner_join(pr_geographic2, A2, by = c("pr_alpha" = "province"))
m2 <- pr_geographic2 %>%
ggplot(aes(x = long, y = lat, group = group, fill = Percentage)) +
geom_polygon(show.legend = NA) +
annotate(geom = "text",x = 642412.6,y = 201110.2, label = "21%", color = "white",size = 3)+
annotate(geom = "text",x = 1349519.2,y = 782762.2, label = "4.7%",color = "white",size = 3)+
annotate(geom = "text",x = -115306.8,y = 644233.4, label = "1%", color = "white",size = 3)+
annotate(geom = "text",x = 2163606.1,y = 237946.6, label = "3%", color = "white", size = 3)+
annotate(geom = "text",x = -1092152.6,y = 809288.2, label = "16%", color = "white",size = 3)+
annotate(geom = "text",x = -1867594.7,y =912726.5, label = "5.2%", color = "white",size = 3)+
annotate(geom = "text",x = -675361.6,y = 487741.4, label = "0.7%", color = "white",size = 3)+
annotate(geom = "text",x = -888417.3,y = 1651194.8 , label = "3.6%", color ="white",size = 3)+
annotate(geom = "text", x = 2413606.1, y = 421394.6,label = "0.7%",color ="black", size = 3)+
annotate(geom = "text",x = 2695757.5,y = 232727.5, label = "19%", color = "black", size = 3)+
annotate(geom = "text", x = 1565757, y = -750409 , label = "US 9% & Others 15%",
fontface = "italic", color = "black", size = 3) +
coord_fixed() +
scale_fill_continuous( type = "viridis",
limits = c(0,30), breaks = c(0, 5, 10, 15, 20, 25,30),
guide = guide_colourbar(nbin = 100, draw.ulim = FALSE, draw.llim = FALSE,
title = "Travel volume (%)")
) +
theme_mapcan() + theme(legend.position="",
plot.title=element_text(size=rel(1.3), face="bold"))+
ggtitle("During the pandemic")
m1 + m2
Av.daily <- function(ProFinal){
CC <- ProFinal
# get the average months March 2019 to Feb 2020 (except June July August 2019)
CC <- subset(CC, !date %in% c(as.Date("2019-01-01"), as.Date("2019-02-01"),
as.Date("2020-03-01"), as.Date("2019-06-01"),
as.Date("2019-07-01"), as.Date("2019-07-01"),
as.Date("2019-08-01")) )
rownames(CC) <- NULL  # Reset row names
CC1 <- CC[1:9,]    #prepandemic
CC2 <- CC[10:18,]  #pandemic
# get the mean for both dataframe
C1 <- colSums(CC1[2:13])
C2 <- colSums(CC2[2:13])
C1 <- data.frame(C1)
C1 <- cbind(province = rownames(C1), C1)
rownames(C1) <- 1:nrow(C1)
#repeat TR for three tritories
C1[nrow(C1) + 1,] <- c( "YT",  2682.378)
C1[nrow(C1) + 1,] <- c( "NT", 2682.378)
C1[nrow(C1) + 1,] <- c( "NU",2682.378)
C1$C1 <- as.numeric(C1$C1)
C1 <- C1 %>% rename(Daily = C1)
C1$province[C1$province == 'PEI'] <- 'PE'
# 273 days pre pandemic 2019
C1$Daily <- (C1$Daily)/273
C1$Daily <- ceiling(C1$Daily)
C2 <- data.frame(C2)
C2 <- cbind(province = rownames(C2), C2)
rownames(C2) <- 1:nrow(C2)
#repeat TR for three tritories
C2[nrow(C2) + 1,] <- c( "YT", 5329)
C2[nrow(C2) + 1,] <- c( "NT", 5329)
C2[nrow(C2) + 1,] <- c( "NU", 5329)
C2$C2 <- as.numeric(C2$C2)
C2 <- C2 %>% rename(Daily = C2)
C2$province[C2$province == 'PEI'] <- 'PE'
## 274 days during the pandemic 2020
C2$Daily <- (C2$Daily)/274
C2$Daily <- ceiling(C2$Daily)
return(C1)
#return(C2)
}
C1 <- Av.daily(ProFinal)
#return(C1)
return(C2)
Av.daily <- function(ProFinal){
CC <- ProFinal
# get the average months March 2019 to Feb 2020 (except June July August 2019)
CC <- subset(CC, !date %in% c(as.Date("2019-01-01"), as.Date("2019-02-01"),
as.Date("2020-03-01"), as.Date("2019-06-01"),
as.Date("2019-07-01"), as.Date("2019-07-01"),
as.Date("2019-08-01")) )
rownames(CC) <- NULL  # Reset row names
CC1 <- CC[1:9,]    #prepandemic
CC2 <- CC[10:18,]  #pandemic
# get the mean for both dataframe
C1 <- colSums(CC1[2:13])
C2 <- colSums(CC2[2:13])
C1 <- data.frame(C1)
C1 <- cbind(province = rownames(C1), C1)
rownames(C1) <- 1:nrow(C1)
#repeat TR for three tritories
C1[nrow(C1) + 1,] <- c( "YT",  2682.378)
C1[nrow(C1) + 1,] <- c( "NT", 2682.378)
C1[nrow(C1) + 1,] <- c( "NU",2682.378)
C1$C1 <- as.numeric(C1$C1)
C1 <- C1 %>% rename(Daily = C1)
C1$province[C1$province == 'PEI'] <- 'PE'
# 273 days pre pandemic 2019
C1$Daily <- (C1$Daily)/273
C1$Daily <- ceiling(C1$Daily)
C2 <- data.frame(C2)
C2 <- cbind(province = rownames(C2), C2)
rownames(C2) <- 1:nrow(C2)
#repeat TR for three tritories
C2[nrow(C2) + 1,] <- c( "YT", 5329)
C2[nrow(C2) + 1,] <- c( "NT", 5329)
C2[nrow(C2) + 1,] <- c( "NU", 5329)
C2$C2 <- as.numeric(C2$C2)
C2 <- C2 %>% rename(Daily = C2)
C2$province[C2$province == 'PEI'] <- 'PE'
## 274 days during the pandemic 2020
C2$Daily <- (C2$Daily)/274
C2$Daily <- ceiling(C2$Daily)
#return(C1)
return(C2)
}
C2 <- Av.daily(ProFinal)
pr_geographic <- mapcan(boundaries = province, type = standard)
pr_geographic <- inner_join(pr_geographic, C1, by = c("pr_alpha" = "province"))
df.label <- read.csv("Data/df.label2.csv")
df.label <- df.label %>% left_join(C1 , by= "province")
df.label$Daily <- round(df.label$Daily)
m3 <- pr_geographic %>%
ggplot(aes(x = long, y = lat, group = group, fill = Daily)) +
geom_polygon(show.legend = NA) +
geom_text(data =df.label, aes(x = new.long, y = new.lat, group = 1, label = Daily),
size = 4, color = "white")+
annotate(geom = "text",x = 2685757.5,y = 232727.5,label = "648", color = "black", size = 4)+
annotate(geom = "text", x = 2413606.1, y = 421394.6,label = "19",color ="black", size = 4)+
annotate(geom = "text", x = 1565757, y = -750409 , label = "US 479 & Others 300",
fontface = "italic", color = "black", size = 4) +
coord_fixed() +
theme_mapcan() +
scale_fill_continuous(type = "viridis",
limits = c(0,900), breaks = c(25,50,75, 100, 200, 300, 400, 500,600, 700,800,900),
#limits = c(0,900), breaks = c(25,50,75,100,250,500,750,900),
guide = guide_colourbar(nbin = 13, draw.ulim = FALSE, draw.llim = FALSE, barwidth = 20,
title = "Total travel volume (Daily)", label.hjust = 0.7,
label.vjust = 0.79,
label.theme = element_text(angle = 90, size=7.9))
) +
theme_mapcan() + theme(legend.position="bottom",
plot.title=element_text(size=rel(1.3), face="bold"))+
ggtitle("Before the pandemic")
pr_geographic2 <- mapcan(boundaries = province, type = standard)
pr_geographic2 <- inner_join(pr_geographic2, C2, by = c("pr_alpha" = "province"))
df.label <- read.csv("Data/df.label2.csv")
df.label <- df.label %>% left_join(C2 , by= "province")
m4 <- pr_geographic2 %>%
ggplot(aes(x = long, y = lat, group = group, fill = Daily)) +
geom_polygon(show.legend = NA) +
geom_text(data =df.label, aes(x = new.long, y = new.lat, group = 1, label = Daily),
size = 4, color = "white")+
annotate(geom = "text", x = 2715757.5,y = 232727.5,label = "115", color = "black", size = 4)+
annotate(geom = "text", x = 2413606.1, y = 421394.6,label = "5",color ="black", size = 4)+
annotate(geom = "text", x = 1565757, y = -750409 , label = "US 54 & Others 85",
fontface = "italic", color = "black", size = 4) +
coord_fixed() +
scale_fill_continuous( type = "viridis",
limits = c(0,900), breaks = c(25,50,75,100,250,500,750,900),
guide = guide_colourbar(nbin = 10, draw.ulim = FALSE, draw.llim = FALSE, barwidth = 15,
title = "Travel volume (Daily)",
label.theme = element_text(angle = 90, size=7.8))
) +
theme_mapcan() + theme(legend.position="",
plot.title=element_text(size=rel(1.3), face="bold"))+
ggtitle("During the pandemic")
m3 + m4
C1$Daily
C2$Daily
A1$Percentage
A2$Percentage
View(Tra_daily2)
