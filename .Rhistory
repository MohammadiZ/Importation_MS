mdf2.sub <- melt(df2.sub, id=c("report"))
m9 <- ggplot() +
geom_bar(data=mdf2.sub , aes(x=report, y=value, fill=variable), stat="identity") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
labs(color=" ",
title="Epidemiological model predictions",
y="\n Reported travel-related cases (daily %)",
x="") +
guides(fill = guide_legend(title = "Type of Travelers"))+
theme(legend.position="right") +
scale_fill_manual(values=c(cpalete[1], cpalete[2], "#FFCC63")) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.3)),
legend.position="bottom" ,
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))+
scale_y_continuous(labels = function(x) paste0(x*1, "%"))
m1 <- ggplot() +
geom_bar(data=mdf1.sub , aes(x=report, y=value, fill=variable), stat="identity") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
labs(color=" ",
title="Epidemiological model predictions",
y="\n Reported travel-related cases (daily)",
x="") +
guides(fill = guide_legend(title = "Departure Origin"))+
theme(legend.position="right") +
scale_fill_manual(values=c(cpalete[1], cpalete[2])) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom" ,
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
### infected percentage rw and r in Canada and International
df2.sub <- select(IMP, c("report", "RE.Int", "RE.Ca", "RW", "Total"))
for (i in 1:nrow(df2.sub)){
for (j in 2:length(df2.sub)){
df2.sub[i,j] <- (df2.sub[i,j]*100)/(df2.sub$Total[i])
}
}
df2.sub <- select(df2.sub, -c("Total")) %>% rename(CA.r = RE.Ca, CA.rw = RW, INT = RE.Int)
mdf2.sub <- melt(df2.sub, id=c("report"))
m2 <- ggplot() +
geom_bar(data=mdf2.sub , aes(x=report, y=value, fill=variable), stat="identity") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
labs(color=" ",
title="Epidemiological model predictions",
y="\n Reported travel-related cases (daily %)",
x="") +
guides(fill = guide_legend(title = "Type of Travelers"))+
theme(legend.position="right") +
scale_fill_manual(values=c(cpalete[1], cpalete[2], "#FFCC63")) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.3)),
legend.position="bottom" ,
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))+
scale_y_continuous(labels = function(x) paste0(x*1, "%"))
m1+m2
#### 3. comparison models plots
# 3.1. daily International
df1.Int <- select(dfplt, c(date, bestInt, Est.Int))
df1.Int <- melt(df1.Int, id=c("date"))
plt1 <- c( "Best model"=cpalete[8], "Epidemiological model" = cpalete[7],"Data" = cpalete[1])
p1 <- ggplot() +
geom_line(data=dfplt, aes(x=date, y= Rep.Int, color='Data'), size=1) +
geom_bar(data=df1.Int, aes(x=date, y=value, fill=variable), stat="identity", position=position_dodge(), alpha=.8 ) +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 11))+
labs(x="", y="\n Reported travel-related cases (daily)",
title="Comparison of model predictions to reported travel-related cases \n International") +
scale_fill_manual(name = "", labels = c( "Best model", "Epidemiological model","Data"), values = c( cpalete[8],cpalete[7], cpalete[1])) +
scale_color_manual(values = plt1) +
guides(color = guide_legend(title = ""), size=rel(1.4)) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom",
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
p1 <- ggplot() +
geom_line(data=dfplt, aes(x=date, y= Rep.Int, color='Data'), size=1) +
geom_bar(data=df1.Int, aes(x=date, y=value, fill=variable), stat="identity", position=position_dodge(), alpha=.8 ) +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 11))+
labs(x="", y="\n Reported travel-related cases (daily)",
title="Comparison of model predictions to reported travel-related cases \n International") +
scale_fill_manual(name = "", labels = c( "Best model", "Epidemiological model","Data"), values = c( cpalete[8],cpalete[7], cpalete[1])) +
scale_color_manual(values = plt1) +
guides(color = guide_legend(title = ""), size=rel(1.4)) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom",
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
p1
# 3.2. daily Canada
df1.Dom <- select(dfplt, c(date, bestDom, Est.Dom))
df1.Dom <- melt(df1.Dom, id=c("date"))
plt2 <- c( "Best model"=cpalete[8],"Epidemiological model" = cpalete[7], "Data" = cpalete[2])
p2 <- ggplot() +
geom_line( data=dfplt, aes(x=date, y= Rep.Dom, color='Data'), size=1) +
geom_bar(data=df1.Dom, aes(x=date, y=value, fill=variable), stat="identity", position=position_dodge(), alpha=.8) +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 11))+
labs(x="", y="\n Reported travel-related cases (daily)",
title="Comparison of model predictions to reported travel-related cases \n Canada") +
scale_fill_manual(name = "", labels = c( "Best-model", "Epidemiological-model","Reported"), values = c( cpalete[8],cpalete[7], cpalete[2])) +
scale_color_manual(values = plt2) +
guides(color = guide_legend(title = ""), size=rel(1.4)) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom",
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
p2
###---------- make monthly version ------------
# epidemiology model
IMP$year  <- strftime(IMP$report, "%Y")
IMP$month <- strftime(IMP$report, "%m")
IMP.month <- IMP %>%
group_by( year, month) %>%
dplyr::summarize(CA = sum(REW.Ca), INT = sum(RE.Int),
Total= sum(Total)) %>%
as.data.frame()
# best model
BEST  <- select(dfplt, c(date, bestInt, bestDom  ))
View(BEST)
View(dfplt)
###---------- make monthly version ------------
# epidemiology model
IMP$year  <- strftime(IMP$report, "%Y")
IMP$month <- strftime(IMP$report, "%m")
IMP.month <- IMP %>%
group_by( year, month) %>%
dplyr::summarize(CA = sum(REW.Ca), INT = sum(RE.Int),
Total= sum(Total)) %>%
as.data.frame()
# best model
XXXX <- select(dfplt, c(date, bestInt, bestDom  ))
XXXX$year  <- strftime(XXXX$date, "%Y")
XXXX$month <- strftime(XXXX$date, "%m")
XXXX.month <- XXXX %>%
group_by( year, month) %>%
dplyr::summarize( bInt= sum(bestInt),
bCA = sum(bestDom)
) %>%
as.data.frame()
#make monthly for reported case
AAAA  <- select(Travel_case, c(date, Tot.Int,Tot.Dom ))
AAAA$year  <- strftime(AAAA$date, "%Y")
AAAA$month <- strftime(AAAA$date, "%m")
AAAA.month <- AAAA %>%
group_by( year, month) %>%
dplyr::summarize( RInt= sum(Tot.Int),
RCA = sum(Tot.Dom)
) %>%
as.data.frame()
cdf2 <- IMP.month %>% left_join(XXXX.month , by ="month")
cdf2 <- cdf2 %>% left_join(AAAA.month , by ="month")
#add column date to it
cdf2 <- cdf2 %>%
mutate(date = with(., sprintf("%s-%02s", year.x, month)))
cdf2$date <- as.Date(paste(cdf2$date,"-01",sep=""))  # convert to date
View(cdf2)
dfplt$year  <- strftime(dfplt$date, "%Y")
dfplt$month <- strftime(dfplot$date, "%m")
dfplt$month <- strftime(dfplt$date, "%m")
colnames(dfplt)
dfplt.month <- dfplt %>%
group_by(year, month) %>%
dplyr::summarize(CA = sum(Est.Dom), INT = sum(Est.Int),
bCA = sum(bestDom), bInt= sum(bestInt),
RCA = sum(Rep.Dom), RInt= sum(Rep.Int)
) %>%
as.data.frame()
View(dfplt.month)
dfplt.month$CA
dfplt.month$INT
dfplt.month$bInt
dfplt.month$bCA
dfplt.month$RInt
dfplt.month$RCA
View(dfplt)
View(Travel_case)
###---------- make monthly version ------------
dfplt$year  <- strftime(dfplt$date, "%Y")
dfplt$month <- strftime(dfplt$date, "%m")
dfplt.month <- dfplt %>%
group_by(year, month) %>%
dplyr::summarize(CA = sum(Est.Dom), INT = sum(Est.Int),
bCA = sum(bestDom), bInt= sum(bestInt)
) %>%
as.data.frame()
#monthly reported case
Rep.month  <- select(Travel_case, c(date, Tot.Int,Tot.Dom ))
Rep.month$year  <- strftime(Rep.month$date, "%Y")
Rep.month$month <- strftime(Rep.month$date, "%m")
Rep.month.month <- Rep.month %>%
group_by( year, month) %>%
dplyr::summarize( RInt= sum(Tot.Int),
RCA = sum(Tot.Dom)
) %>%
as.data.frame()
dfplt.month  <- dfplt.month  %>% left_join(Rep.month , by ="month")
## Winter 2022
## Project: Importation Risk
## Zahra Mohammadi
#-----------------------------
source("RiskImp.R")
View(MLE)
View(models)
View(IMP)
##-------------------- plots ---------------------
### 1. estimated infected - bar plots
df1.sub <- select(IMP, c("report" , "RE.Int", "REW.Ca" ))
df1.sub <- df1.sub %>% rename(INT = RE.Int, CA = REW.Ca)
mdf1.sub <- melt(df1.sub, id=c("report"))
m1 <- ggplot() +
geom_bar(data=mdf1.sub , aes(x=report, y=value, fill=variable), stat="identity") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
labs(color=" ",
title="Epidemiological model predictions",
y="\n Reported travel-related cases (daily)",
x="") +
guides(fill = guide_legend(title = "Departure Origin"))+
theme(legend.position="right") +
scale_fill_manual(values=c(cpalete[1], cpalete[2])) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom" ,
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
m1
### 2. infected percentage rw and r in Canada and International
df2.sub <- select(IMP, c("report", "RE.Int", "RE.Ca", "RW", "Total"))
for (i in 1:nrow(df2.sub)){
for (j in 2:length(df2.sub)){
df2.sub[i,j] <- (df2.sub[i,j]*100)/(df2.sub$Total[i])
}
}
df2.sub <- select(df2.sub, -c("Total")) %>% rename(CA.r = RE.Ca, CA.rw = RW, INT = RE.Int)
mdf2.sub <- melt(df2.sub, id=c("report"))
m2 <- ggplot() +
geom_bar(data=mdf2.sub , aes(x=report, y=value, fill=variable), stat="identity") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
labs(color=" ",
title="Epidemiological model predictions",
y="\n Reported travel-related cases (daily %)",
x="") +
guides(fill = guide_legend(title = "Type of Travelers"))+
theme(legend.position="right") +
scale_fill_manual(values=c(cpalete[1], cpalete[2], "#FFCC63")) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.3)),
legend.position="bottom" ,
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))+
scale_y_continuous(labels = function(x) paste0(x*1, "%"))
m2
### 3. comparison models plots
### 3.1. daily International
df1.Int <- select(dfplt, c(date, bestInt, Est.Int))
df1.Int <- melt(df1.Int, id=c("date"))
plt1 <- c( "Best model"=cpalete[8], "Epidemiological model" = cpalete[7],"Data" = cpalete[1])
p1 <- ggplot() +
geom_line(data=dfplt, aes(x=date, y= Rep.Int, color='Data'), size=1) +
geom_bar(data=df1.Int, aes(x=date, y=value, fill=variable), stat="identity", position=position_dodge(), alpha=.8 ) +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 11))+
labs(x="", y="\n Reported travel-related cases (daily)",
title="Comparison of model predictions to reported travel-related cases \n International") +
scale_fill_manual(name = "", labels = c( "Best model", "Epidemiological model","Data"), values = c( cpalete[8],cpalete[7], cpalete[1])) +
scale_color_manual(values = plt1) +
guides(color = guide_legend(title = ""), size=rel(1.4)) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom",
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
p1
#### 3.2. daily Canada
df1.Dom <- select(dfplt, c(date, bestDom, Est.Dom))
df1.Dom <- melt(df1.Dom, id=c("date"))
plt2 <- c( "Best model"=cpalete[8],"Epidemiological model" = cpalete[7], "Data" = cpalete[2])
p2 <- ggplot() +
geom_line( data=dfplt, aes(x=date, y= Rep.Dom, color='Data'), size=1) +
geom_bar(data=df1.Dom, aes(x=date, y=value, fill=variable), stat="identity", position=position_dodge(), alpha=.8) +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 11))+
labs(x="", y="\n Reported travel-related cases (daily)",
title="Comparison of model predictions to reported travel-related cases \n Canada") +
scale_fill_manual(name = "", labels = c( "Best-model", "Epidemiological-model","Reported"), values = c( cpalete[8],cpalete[7], cpalete[2])) +
scale_color_manual(values = plt2) +
guides(color = guide_legend(title = ""), size=rel(1.4)) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom",
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
p2
###---------- make monthly version ------------
dfplt$year  <- strftime(dfplt$date, "%Y")
dfplt$month <- strftime(dfplt$date, "%m")
dfplt.month <- dfplt %>%
group_by(year, month) %>%
dplyr::summarize(CA = sum(Est.Dom), INT = sum(Est.Int),
bCA = sum(bestDom), bInt= sum(bestInt)
) %>%
as.data.frame()
View(dfplt.month)
#monthly reported case
Rep.month  <- select(Travel_case, c(date, Tot.Int,Tot.Dom ))
Rep.month$year  <- strftime(Rep.month$date, "%Y")
Rep.month$month <- strftime(Rep.month$date, "%m")
Rep.month.month <- Rep.month %>%
group_by( year, month) %>%
dplyr::summarize( RInt= sum(Tot.Int),
RCA = sum(Tot.Dom)
) %>%
as.data.frame()
dfplt.month  <- dfplt.month  %>% left_join(Rep.month , by ="month")
dfplt.month <- dfplt %>%
group_by(year, month) %>%
dplyr::summarize(CA = sum(Est.Dom), INT = sum(Est.Int),
bCA = sum(bestDom), bInt= sum(bestInt)
) %>%
as.data.frame()
Rep  <- select(Travel_case, c(date, Tot.Int,Tot.Dom ))
Rep$year  <- strftime(Rep$date, "%Y")
Rep$month <- strftime(Rep$date, "%m")
Rep.month <- Rep %>%
group_by( year, month) %>%
dplyr::summarize( RInt= sum(Tot.Int),
RCA = sum(Tot.Dom)
) %>%
as.data.frame()
View(Rep.month)
dfplt.month  <- dfplt.month  %>% left_join(Rep.month , by ="month")
dfplt.month <- dfplt.month %>%
mutate(date = with(., sprintf("%s-%02s", year.x, month)))
dfplt.month$date <- as.Date(paste(dfplt.month$date,"-01",sep=""))  # convert to date
### 3.3. monthly International
df2.Int <- select(dfplt.month, c(date, bInt, INT))
df2.Int <- melt(df2.Int, id=c("date"))
p3 <- ggplot()+
geom_bar(data=df2.Int, aes(x=date, y=value, fill=variable), stat="identity", position=position_dodge(),alpha=.8) +
geom_line(data= cdf2, aes(x=date, y=RInt),stat="identity",color=cpalete[1], size=1) +
geom_point(data= cdf2,  aes(x=date, y=RInt, color="Data"), size =2.8) +
labs(x="", y="\n Reported travel-related cases (monthly)", title="International" ) +
ylim(0, 30) +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 11))+
labs(x="", y="\n Reported travel-related cases (monthly)",
title="Comparison of model predictions to reported travel-related cases \n International") +
scale_fill_manual(name = "", labels = c("Best model","Epidemiological model", "Data"), values = c( cpalete[8],cpalete[7], cpalete[1])) +
scale_color_manual(values = plt1)+
guides(color = guide_legend(title = ""), size=rel(1.4)) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom",
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
p3 <- ggplot()+
geom_bar(data=df2.Int, aes(x=date, y=value, fill=variable), stat="identity", position=position_dodge(),alpha=.8) +
geom_line(data= dfplt.month, aes(x=date, y=RInt),stat="identity",color=cpalete[1], size=1) +
geom_point(data= dfplt.month,  aes(x=date, y=RInt, color="Data"), size =2.8) +
labs(x="", y="\n Reported travel-related cases (monthly)", title="International" ) +
ylim(0, 30) +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 11))+
labs(x="", y="\n Reported travel-related cases (monthly)",
title="Comparison of model predictions to reported travel-related cases \n International") +
scale_fill_manual(name = "", labels = c("Best model","Epidemiological model", "Data"), values = c( cpalete[8],cpalete[7], cpalete[1])) +
scale_color_manual(values = plt1)+
guides(color = guide_legend(title = ""), size=rel(1.4)) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom",
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
p3
# 3.4. monthly Canada
df2.Dom <- select(dfplt.month, c(date, bCA, CA))
df2.Dom <- melt(df2.Dom, id=c("date"))
p4 <- ggplot() +
geom_bar(data=df2.Dom, aes(x=date, y=value, fill=variable), stat="identity", position=position_dodge(),alpha=.8 ) +
geom_line(data= dfplt.month, aes(x=date, y= RCA),stat="identity",color=cpalete[2], size=1) +
geom_point(data= dfplt.month,  aes(x=date, y= RCA, color="Data"), size =2.8) +
ylim(0, 120) +
scale_x_date(date_breaks = "1 month", date_labels = "%b %y") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 11))+
labs(x="", y="\n Reported travel-related cases (monthly)",
title="Comparison of model predictions to reported travel-related cases \n Canada") +
scale_color_manual(values = plt2)+
scale_fill_manual(name = "", labels = c( "Best model","Epidemiological model", "Data"), values = c( cpalete[8],cpalete[7], cpalete[2])) +
guides(color = guide_legend(title = ""), size=rel(1.4)) +
theme_classic() + theme(axis.text.x = element_text(angle = 90, size=rel(1.2)),
legend.position="bottom",
legend.text=element_text(size=rel(1.2)),
plot.title=element_text(size=rel(1.3), face="bold"),
axis.title = element_text(size=rel(1.1)),
axis.text.y = element_text(size=rel(1.2)))
p4
p2+p1 + plot_annotation(tag_levels = 'A')
ggsave("Figure/figureApp1.png", width = 15, , height = 6, dpi =500)
(m1+m2)/(p4+p3) + plot_annotation(tag_levels = 'A')
ggsave("Figure/Figure3.png", width = 15, , height = 10, dpi =500)
## Winter 2022
## Project: Importation Risk
## Zahra Mohammadi
##---------- 1. Load libraries ------------
source("preliminaries.R")
# daily travel volume calculated in Volume-focusOrigin.R
Volume <- read.csv("Data/Totalvolume/Totalvolume.csv")
getwd()
# daily travel volume calculated in Volume-focusOrigin.R
Volume <- read.csv("Data/TraVolData/Totalvolume.csv")
View(Volume)
getwd()
## Winter 2022
## Project: Importation Risk
## Zahra Mohammadi
##---------- 1. Load libraries ------------
source("preliminaries.R")
## Winter 2022
## Project: Importation Risk
## Zahra Mohammadi
##---------- 1. Load libraries ------------
source("preliminaries.R")
##---------- 2. Read data ------------
# COVID cases in origins (CA excluded NL and US would consider as International)
source("getcases.pro.R") # output: Case, Cum and pop
#Seroprevalence Data and Correction factor calculated in
source("getsero-CF.R") # output: CF
# daily travel volume calculated in Volume-focusOrigin.R
Volume <- read.csv("Data/TraVolData/Totalvolume.csv")
Volume$date <- as.Date(as.character(Volume$date), format = "%Y-%m-%d")
# round data
Volume <- data.frame(lapply(Volume, function(x) if(is.numeric(x)) floor(x) else x))
Volume <- Volume %>% rename(US = INT)
View(Volume)
write.csv(Volume, "Data/TotalTraVolume.csv", row.names = FALSE)
##---------- 2. Read data ------------
# COVID cases in origins (CA excluded NL and US would consider as International)
source("getcases.pro.R") # output: Case, Cum and pop
#Seroprevalence Data and Correction factor calculated in
source("getsero-CF.R") # output: CF
# daily travel volume calculated in Volume-focusOrigin.R
Volume <- read.csv("Data/TraVolData/Totalvolume.csv")
Volume$date <- as.Date(as.character(Volume$date), format = "%Y-%m-%d")
# round data
Volume <- data.frame(lapply(Volume, function(x) if(is.numeric(x)) floor(x) else x))
write.csv(Volume, "Data/TotalTraVolume.csv", row.names = FALSE)
# daily travel volume calculated in Volume-focusOrigin.R
Volume <- read.csv("Data/TraVolData/TotalTraVolume.csv")
Volume$date <- as.Date(as.character(Volume$date), format = "%Y-%m-%d")
Volume <- Volume %>% rename(US = INT)
#break down daily volume to regular travel vs rotational workers (200 daily-rw)
rw_Volume <- Volume %>% mutate(AB = 114, ON= 30, BC= 8 , SK = 4, MB = 2, QC = 4,
NB = 8, NS = 16, PEI = 4, TR = 10 , US = 0 )
#min(Volume$..) AB, Sk, PEI , NB and TR are less than this values needs to fix
fixor <- c("AB","PEI", "SK", "TR", "NB")
for (i in 1:length(fixor)){
pr <- fixor[i]
for (j in 1:nrow(rw_Volume)){
if (rw_Volume[j, pr] > Volume[j, pr] ){rw_Volume[j,pr] <- Volume[j, pr]}
}
}
# Regular travelers
origins <- c("AB", "BC", "MB" ,"NB" ,"NS" , "ON","PEI", "QC","SK", "TR", "US"  )
rt_Volume <- Volume
for (i in 1:length(origins)){
pr <- origins[i]
rt_Volume[pr] <- Volume[pr] - rw_Volume[pr]
}
## For validate purpose--Reported travel-related cases in NL
Travel_case <- read.csv("Data/IM215194-TravelTypeCase.csv") %>% rename(date = REPORTED_DATE )
View(Travel_case)
Travel_case$date <- as.Date(Travel_case$date, format = "%Y-%m-%d")
Travel_case <- Travel_case %>% filter(Travel_case$date >= as.Date("2020-09-01") & Travel_case$date <= as.Date("2021-05-31") )
#consider unknown as not Travel-related infected (unknown source was not alot)
Travel_case["Tot.NotTravel"] <-rowSums(Travel_case[, c("Tot.NoTR", "Tot.Unknown")])
Travel_case <- select(Travel_case,-c("Tot.NoTR", "Tot.Unknown"))
#Total cases in NL
Travel_case <- dplyr::mutate(Travel_case, "Tot.Tra" = rowSums((Travel_case[,2:3]), na.rm = TRUE))
Travel_case <- select(Travel_case, c(date, Tot.Int, Tot.Dom, Tot.Tra))
write.csv(Travel_case, "Data/Travel.Case.csv", row.names = FALSE)
## Winter 2022
## Project: Importation Risk
## Zahra Mohammadi
##---------- 1. Load libraries ------------
source("preliminaries.R")
##---------- 2. Read data ------------
# COVID cases in origins (CA excluded NL and US would consider as International)
source("getcases.pro.R") # output: Case, Cum and pop
#Seroprevalence Data and Correction factor calculated in
source("getsero-CF.R") # output: CF
Travel_case <- read.csv("Data/Travel.Case.csv") %>% rename(date = REPORTED_DATE )
Travel_case <- read.csv("Data/Travel.Case.csv")
View(Travel_case)
Travel_case$date <- as.Date(Travel_case$date, format = "%Y-%m-%d")
